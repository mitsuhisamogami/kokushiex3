name: Test

on: [push]

jobs:
  rspec:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.3
        ports:
          - 3306:3306
        env:
          TZ: "Asia/Tokyo"
          MYSQL_ROOT_PASSWORD: password
          options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    container:
      image: ruby:3.3.1
      env:
        RAILS_ENV: test
    steps:
        - uses: actions/checkout@v2
        - name: bundler config
          run: bundle config set path 'vendor/bundle'
        - name: cache gems
          id: cache-gems
          uses: actions/cache@v2
          with:
            path: vendor/bundle
            key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-gems-
        - name: setup bundle
          if: steps.cache-gems.outputs.cache-hit != 'true'
          run: |
            bundle install --jobs 4 --retry 3
        - name: setup db schema
          run: |
            bin/rails db:create
            bin/rails db:migrate
        - name: run spec
          run: bundle exec rspec  
        
  rubocop:
    runs-on: ubuntu-latest
    container:
      image: ruby:3.3.1
    steps:
      - uses: actions/checkout@v2
      - name: bundler config
        run: bundle config set path 'vendor/bundle'
      - name: Cache gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: setup bundle
        if: steps.cache-gems.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3
      - name: run rubocop
        run: bundle exec rubocop

  erblint:
    runs-on: ubuntu-latest
    container:
      image: ruby:3.3.1
    steps:
      - uses: actions/checkout@v2
      - name: bundler config
        run: bundle config set path 'vendor/bundle'
      - name: Cache gems
        id: cache-gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: setup bundle
        if: steps.cache-gems.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3
      - name: run erblint
        run: bundle exec erblint .