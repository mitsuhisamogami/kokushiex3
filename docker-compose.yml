version: '3'
services:
  web:
    # build: .でdocker-compose.ymlと同じフォルダにDockerfileがあることを示す
    build: .
    # 毎回 rm tmp/pids/server.pid するのも手間であるため事前に手元で/tmp/pids/server.pidを削除する
    command: bash -c "rm -f tmp/pids/server.pid && bin/dev"
    volumes:
      - .:/app
      - gem_data:/usr/local/bundle
    ports:
      - 3000:3000
    depends_on:
      - db
    # railsでpryする用
    # true を指定することでコンテナを起動させ続ける。   
    tty: true
    # stdin_openとは標準入出力とエラー出力をコンテナに結びつける設定
    stdin_open: true

  db:
    image: mysql:8.3
    # m1はplatformを指定して、linux/amd64にエミュレートする指定をすることで正常に動く
    platform: linux/amd64
    # DBのレコードが日本語だと文字化けするので、utf8をセットする
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
    # 環境変数
    environment:
      MYSQL_ROOT_PASSWORD: password
      TZ: "Asia/Tokyo"
    ports:
      - "3306:3306"

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  sidekiq:
    build: .
    command: bundle exec sidekiq
    volumes:
      - .:/app
      - gem_data:/usr/local/bundle
    depends_on:
      - redis
      - db
    tty: true
    stdin_open: true
# PC上にdb-volumeという名前でデータ領域が作成される
# コンテナを作り直したとしてもPC上に残るようにするために設定
volumes:
  gem_data:
  mysql_data:
  redis_data: